name: Azure Pipelines
variables:
  python.version: '3.7.6'
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: Hosted Ubuntu 1604
    steps:
    # Needed for Terraform VM deployment
    - task: InstallSSHKey@0
      name: InstallSSHKey
      inputs:
       knownHostsEntry: '13.92.31.53 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
       sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCTzCs9a8kR2M4/LlZa1GICk9JhAfvfcfBj/z1KAFRCeLLnvW161Owfzw6GbXqsiM+5E5cOhe3yIFh3knmL6dKlWPWh9q00oP1LxgpLHqkmOeDD+k/RDbExeoVqwQDNYQ3I9glUxkd76waAFb8RKhLTOf6G/QgHrniDXunuLIYHhCCLf7xw5AK8HeKOcaw0s4LQxMrnlje14paXAMDyL4foDxdqT+ZeupuacxcwTXyHJEGaXdptpeS30r7fFg5RzA6lfKoDUfHrYQoNei/LMBElArRSzllS08zJcNfW6Sp1/so0AaKUekicAP2w0YY3009/tuyzyiwPzz++c6D7CKoxHgOLnyMu96VczDhfagPR4a27vpXuK9XDbT+SJZnsiE91E2ve+7V3OjbCB/vp67FGtqkQFGVukWqES9m9sdmWvShiR9DxQU5jwwUBevh/sRtYGqbEV5vuOeedUp1S+0Yjrktbaku+RbIPrb1AIfSrMupGgyzqN1GD27HeWnr053d88c/WM8vnYhJWxJ/SZ0YcjUNEpvovC6dPGQLHpspSz/IZDO8igDdWftU1VHsj9ox2LSgQSvSXtjKzxBUE2d9gff3+BdLCLSGJQO0sGXzczqvyygG5x+wOF7gepWQ4n9KACRIuHZp5Ox+vUrw62tI/gWVmR1uIPZNRzrYEyMWLFQ=='
       sshKeySecureFile: 'id_rsa'
    - task: InstallTerraform@1
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: '0.12.26'
    - script: 'cd terraform/environments/test && terraform init' 
      displayName: 'Initialization Terraform'
    - script:
        cd terraform/environments/test &&
        terraform apply -auto-approve
        -var="public_key_path=$(InstallSSHKey.secureFilePath)"
      displayName: 'Apply Terraform'
    - script: |
        sudo npm install -g newman
        sudo npm install -g newman-reporter-junitfull
      displayName: 'Install Postman Dependencies'
    - script:
        newman run "$(System.DefaultWorkingDirectory)/automatedtesting/postman/data_validation_test.postman_collection.json" -e "$(System.DefaultWorkingDirectory)/automatedtesting/postman/userva.postman_environment.json" -r cli,junitfull --reporter-junitfull-export JUnitReport-data-validation.xml
      displayName: 'Data Validation Test'
    - script:
        newman run "$(System.DefaultWorkingDirectory)/automatedtesting/postman/regression_test.postman_collection.json" -e "$(System.DefaultWorkingDirectory)/automatedtesting/postman/userva.postman_environment.json" -r cli,junitfull --reporter-junitfull-export JUnitReport-regression.xml
      displayName: 'Regression Test'
